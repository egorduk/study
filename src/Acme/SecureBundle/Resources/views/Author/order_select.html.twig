{% extends "AcmeSecureBundle::layout_author.html.twig" %}
{% block title "Просмотр заказа" %}
    {% block content %}
        <link rel="stylesheet" href="{{ asset('bundles/css/jqgrid/custom-theme1/jquery-ui-1.10.3.custom.min.css') }}" />
        <link rel="stylesheet" href="{{ asset('bundles/css/jqgrid/ui.jqgrid.css') }}" />
        <link rel="stylesheet" href="{{ asset('bundles/css/window.css') }}" />
        <link rel="stylesheet" href="{{ asset('bundles/css/popup/jquery.define.css') }}" />
        <link rel="stylesheet" href="{{ asset('bundles/css/chat/main.css') }}" />
        <link rel="stylesheet" href="{{ asset('bundles/css/style_order.css') }}" />
        <script type="text/javascript" src="{{ asset('bundles/js/jquery.cookie.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/jqgrid/i18n/grid.locale-ru.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/jqgrid/jquery.jqGrid.min.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/jqgrid/jquery.jqGrid.fmatter.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/price-format.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/notice_window/notice_window.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/popup/jquery.define.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/script_order.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/sound/ion.sound.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/bootstrap-maxlength.min.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/script_jqgrid.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/js/script_socket_helper.js') }}"></script>
        <script src="http://localhost:8008/socket.io/socket.io.js" defer></script>
        <style>
            .col-md-2 {
                display: none;
            }
            .thumbnail-image{
                padding-top: 20px;
            }
            .label-primary {
                background-color: #0088cc;
            }
            .success {
                color: green;
                margin-left: -270px;
            }
            .offset-margin-right {
                float: right;
                margin-right: -200px;
            }
            .ui-jqgrid tr.jqgrow td {
                font-size: 18px !important;
            }
            #pagerBids_center, #dialog-message-confirm-selection {
                display: none;
            }
            #block-author {
                width: 200px;
                text-align: center;
            }
            #dialog-message-confirm-selection p .icon-help-3 {
                font-size: 45px;
                color: blue;
            }
            .class-dialog-confirm-selection #ui-id-1 {
                color: blue;
            }
            #pagerBids {
                height: 30px;
            }
            #help-popover {
                cursor: pointer;
                color: #0088CC;
            }
            #volume-on, #volume-off {
                cursor: pointer;
                color: green;
                display: none;
            }
            #volume-off {
                color: red;
            }
        </style>
        <div class="container">
        {#<div class="row">
            <div class="col-md-7">
                <div id="block-about-order">
                    <ul>
                        <li class="block-num">Номер заказа: {{ order.num }}</li>
                        <li class="block-theme">Тема работы: {{ order.theme }}</li>
                        <li class="block-task">Задание: {{ order.shorttask | raw }}</li>
                        <li>Объем заказа: {{ order.countsheet }} стр.</li>
                        <li>Оригинальность заказа: {{ order.originality }}%</li>
                        <li>Предмет: {{ order.subjectorder.childname }}</li>
                        <li>Тип заказа: {{ order.typeorder.name }}</li>
                        <li>Статус заказа: {{ order.statusorder.name }}</li>
                        <li>Дата создания: {{ order.datecreate.format("d.m.Y H:i") }}</li>
                        <li>Выполнение до: {{ order.dateexpire.format("d.m.Y H:i") }}</li>
                        <li>Заказчик: <div id="block-author">{{ obj.client | raw }}</div></li>
                    </ul>
                    {% if obj.clientFiles | length > 0 %}
                        <div class="col-md-4">
                            <p>Файлы заказчика</p>
                            {% for file in obj.clientFiles %}
                                <div class="caption thumbnail block-file">
                                    <a href="{{ file.url }}" target="download" class="download-file"><img src="{{ file.thumbnailurl }}" class="thumbnail-image" alt="thumbnail"/></a>
                                    <span class="filename">{{ file.name }}</span>
                                    <p class="">Размер:{{ file.size }}</p>
                                    <p class="">Загружен:{{ file.dateupload.format("d.m.Y H:i:s") }}</p>
                                    <a rel="tooltip" title="Скачать" data-title='Скачать' data-toggle='tooltip' data-placement='left' onmouseover="$(this).tooltip('show')" class="download thumbnail-action btn" target="download" href="{{ file.url }}"><i class="icon-download"></i></a>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>#}
        <!--<div class="row">
            <div id="block-about-bids">
                <ul>
                    <li>Ставок всего - {{ obj.bids['cnt'] }}</li>
                    <li>Максимальная ставка - {{ obj.bids['max_sum'] }}</li>
                    <li>Минимальная ставка - {{ obj.bids['min_sum'] }}</li>
                </ul>
            </div>
        </div>-->
        {% include 'AcmeSecureBundle:Windows:success.html.twig' with {'message': 'Ставка поставлена!'} %}
        {% include 'AcmeSecureBundle:Windows:error.html.twig' with {'message': 'Ошибка!'} %}
       {# <div class="row">
            <div class="col-md-4 col-md-offset-4">
                {% form_theme formBid "TwigBundle::layout.html.twig" %}
                {{ form_start(formBid, {'attr': {'id' : 'formBid'}}) }}
                <div class="form-group">
                    {{ form_label(formBid.fieldSum) }}
                    {{ form_errors(formBid.fieldSum) }}
                    <div class="input-group">
                        {{ form_widget(formBid.fieldSum) }}
                        <span class="input-group-addon"><i class=" icon-rouble"></i></span>
                    </div>
                    {{ form_label(formBid.fieldDay) }}
                    {{ form_errors(formBid.fieldDay) }}
                    <div class="input-group">
                        {{ form_widget(formBid.fieldDay) }}
                        <span class="input-group-addon"><i class="icon-clock-5"></i></span>
                    </div>
                    <div class="input-group">
                        {{ form_label(formBid.isClientDate) }}
                        {{ form_errors(formBid.isClientDate) }}
                        <span id="help-popover" onmouseover="$(this).tooltip('show')" data-title='Установите флажок, если Вы согласны выполнить заказ в срок, указанный заказчиком' class="icon-help-circled" data-container="body" data-placement="bottom"></span>
                        {{ form_widget(formBid.isClientDate) }}
                    </div>
                    {{ form_label(formBid.fieldComment) }}
                    {{ form_errors(formBid.fieldComment) }}
                    <div class="input-group">
                        {{ form_widget(formBid.fieldComment) }}
                        <span class="input-group-addon"><i class="icon-pencil-6"></i></span>
                    </div>
                    <br>
                    <div class="input-group">
                        <label for="formBid_bid" class="btn btn-success"><span class="icon-hammer">&nbspПоставить</span></label>
                        {{ form_widget(formBid.bid) }}
                    </div>
                </div>
                {{ form_end(formBid) }}
                &#123;&#35;<div id="dialog-message-confirm-selection" title="Подтверждение выполнения заказа">
                    <p>
                        <span class="icon-help-3" style="float:left;"></span>
                        Вы согласны успешно и в срок выполнить данный заказ?
                    </p>
                </div>&#35;&#125;
            </div>
        </div>#}
        {#<div class="col-md-offset-1">
            <div>
                <table id="listBids"></table>
                <div id="pagerBids"></div>
                {% include "AcmeSecureBundle:Secure:layout_context_menu.html.twig" %}
            </div>
        </div>#}
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <div class="modal fade " id="modal-confirm-client-bid" tabindex="-1" role="dialog" aria-labelledby="modal-label" aria-hidden="true">
                    <div class="modal-dialog modal-sm">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="modal-label">Принять ставку заказчика</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label id="client-bid-price">Цена: </label>
                                </div>
                                <div class="form-group">
                                    <label id="client-bid-day">Дней: </label>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" id="btn-confirm-client-bid-confirm">Принять</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Отказать</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <div class="row">
                <div class="block-chat">
                    <div class="chat-wrap">
                        <div class='messages-wrap'></div>
                        <div id="panel">
                            <span class="nick"></span>
                            <textarea class="message-text"></textarea>
                            <button type='button' class='btn-send-msg btn btn-primary disabled'>Send</button>
                        </div>
                    </div>
                    <div id="sidebar">
                        <div id="count-msg"></div>
                        <div id="online">
                            <p style="display: none" id="client-status">{{ obj.client.login }}</p>
                        </div>
                        <div id="in-chat" class="hidden">
                            <p>В чате</p>
                        </div>
                        <div class="is-writing"></div>
                        <span class='icon-volume-1' id="volume-on"></span>
                        <span class='icon-volume-off-4' id="volume-off"></span>
                    </div>
                </div>
            </div>
        </div>
        <script>
        $(document).ready(function() {

            var messages = $(".messages-wrap"),
                    message_txt = $(".message-text"),
                    userLogin = '{{ obj.userLogin }}',
                    clientLogin = '{{ obj.client.login }}',
                    clientId = '{{ obj.client.id }}',
                    orderId = {{ order.id }},
                    orderNum = {{ order.num }},
                    userId = {{ obj.userId }},
                    clientStatus = {{ obj.client.status }},
                    blockCountMsg = $("#count-msg"),
                    btnSendMsg = $(".btn-send-msg"),
                    inChat = $("#in-chat"),
                    volumeOn = $("#volume-on"),
                    volumeOff = $("#volume-off"),
                    flagIsWriting = 0,
                    mode = false,
                    modalConfirmClientBid = $('#modal-confirm-client-bid'),
                    socketHelper,
                    serverHost = 'http://localhost:8008';

            /*modalConfirmClientBid.modal().on('hidden.bs.modal', function () {

            });*/

            ion.sound({
                sounds: [
                    {name: "button_tiny"}
                ],
                path: "{{ asset('bundles/js/sound/sounds/') }}",
                preload: true,
                volume: 1.0
            });

            setViewButton();

            if (clientStatus) {
                $("#client-status").toggle();
            }

            $('.chat .nick').text(userLogin);

            try {
                var socket = io.connect(serverHost);
            } catch(e) {
                //systemMsg("Сервер выключен");
                console.log('Error connecting');
                return;
            }

            volumeOn.on("click", function() {
                $.cookie('volume_msg', '0');
                setViewButton();
            });
            volumeOff.on("click", function() {
                $.cookie('volume_msg', '1');
                setViewButton();
            });

            /*socket.on('connecting', function() {
                systemMsg('Соединение...');
            });*/

            socket.on("connect", function() {
                messages.html('');
                clearSidebarCountRecords();
                //systemMsg('Соединение установленно!');
                //socket.emit("get all messages", {orderId: orderId});
                //var channel = jqgridHelper.getChannel(userId, clientId, 'none-jqgrid');
                socketHelper = new SocketHelper({channel: orderId, authorLogin: userLogin, clientLogin: clientLogin, userLogin: userLogin, userId: userId, clientId: clientId});
                console.log(socketHelper);
                this.emit("join to channel order", socketHelper.join_to_channel_order_params)
                        .emit("request get all messages", socketHelper.get_all_messages_params_author);
                btnSendMsg.removeClass('disabled');
            }).on("response auction bid", function(data) {
                var price = data.price, day = data.day, bidId = data.bidId;
                modalConfirmClientBid.find("#client-bid-price").append('<span id="price">' + price + ' руб.' + '</span>');
                modalConfirmClientBid.find("#client-bid-day").append('<span id="day">' + day + ' дн.' + '</span>');
                modalConfirmClientBid.attr("data-id", bidId);
                modalConfirmClientBid.modal('show');
                //console.log(data);
            }).on("response disconnect user", function() {
                //inChat.addClass("hidden");
            }).on("disconnect", function() {
                disconnectUser();
            }).on("response get all messages", function(data) {
                var countRows = 0;
                for (var key in data) {
                    if (data[key].writerId != 17) {
                        userMsg(data[key].writerLogin, data[key].messageText, data[key].dateWrite);
                    } else {
                        systemMsg(data[key].writerLogin, data[key].messageText, data[key].dateWrite);
                    }
                    countRows++;
                }
                setSidebarCountRecords(countRows);
            }).on("show new message", function(data) {
                if ($.cookie('volume_msg') == 1 && data.writerLogin != userLogin) {
                    ion.sound.play("button_tiny");
                }
                userMsg(data.writerLogin, data.messageText, data.dateWrite);
                increaseCountMsg();
                message_txt.focus();
            }).on("user in room", function() {
                //console.dir(data);
                inChat.removeClass("hidden");
                socket.emit("request view current online");
            }).on("response view current online", function() {
                inChat.removeClass("hidden");
            }).on("response user write", function() {
                if (flagIsWriting == 0) {
                    var msg = '<div id="msg-writing" class="msg system" style="display: none"><p>Печатает...</p></div>';
                    $("#is-writing").append(msg);
                    $("#msg-writing").fadeIn("slow", function() {
                        flagIsWriting = 1;
                    });
                    setTimeout(function() {
                        $("#msg-writing").fadeOut("slow", function() {
                            $(this).remove();
                            flagIsWriting = 0;
                        });
                    }, 2000);
                }
            });


            function setViewButton() {
                var volumeMsg = $.cookie('volume_msg');
                console.log(volumeMsg);
                if (volumeMsg == 1) {
                    volumeOff.hide();
                    volumeOn.show();
                } else {
                    volumeOn.hide();
                    volumeOff.show();
                }
            }

            function disconnectUser() {
                systemMsg("Отключен");
                btnSendMsg.addClass('disabled');
                //inChat.addClass("hidden");
            }

            message_txt.on("input", function(e) {
                //socket.emit("request user write");
            });

            message_txt.on("keydown", function(e) {
                if (e.keyCode === 13 && e.ctrlKey) {
                    sendMessage();
                }
            });

            function clearSidebarCountRecords() {
                blockCountMsg.html('');
            }

            btnSendMsg.click(function () {
                sendMessage();
            });

            function sendMessage() {
                var messageText = $(".message-text"), text = messageText.val();
                messageText.val("");
                if (text.length <= 0 || $.trim(text) == '') {
                    return;
                }
                socketHelper.addParams({messageText: text, orderNum: orderNum});
                socket.emit("create new message", socketHelper.create_new_message_params_author);
            }

            function increaseCountMsg() {
                var digCountMsg = $("#dig-count"), countMsg = digCountMsg.html();
                countMsg++;
                digCountMsg.html(countMsg);
            }

            /*function decreaseCountMsg() {
                var digCountMsg = $("#dig-count"), countMsg = digCountMsg.html();
                countMsg--;
                digCountMsg.html(countMsg);
            }*/

            function systemMsg(message) {
                var m = '<div class="msg system">' + safe(message) + '</div>';
                messages.append(m).scrollTop(messages[0].scrollHeight);
            }

            function safe(str) {
               // return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            }

            function userMsg(login, message, dateWrite) {
                var m = '<div class="msg">' +
                        '<p class="user">' + login + ':</p> ' +
                        '<div class="message">' + message + '</div>' +
                        '<p class="date">' + dateWrite + '</p>' +
                        '</div>';
                messages.append(m).scrollTop(messages[0].scrollHeight);
            }

            function setSidebarCountRecords(countRows) {
                blockCountMsg.append('<span>Кол-во сообщений: <span id="dig-count">' + countRows + '</span></span>');
            }

            /*function getChannel() {
                return  userId + '_' + clientId;
            }*/

            //document.title = "Просмотр заказа №" + {{ order.num }};
            $.fn.button.noConflict();
            var grid = $("#listBids");
            grid.jqGrid({
                url: {{ path('secure_author_order', { num: order.num }) | json_encode | raw }},
                datatype: 'json',
                cache: true,
                mtype: 'POST',
                postData: {action : 'getAuthorBids'},
                emptyrecords: 'Нет поставленных ставок',
                colNames:['','Сумма','Дней на выполнение','В срок заказчика','Дата ставки','Комментарий','Действия'],
                colModel :[
                    {name:'id',index:'id',search:false,hidden:true},
                    {name:'sum',index:'sum',width:140,align:'center',resizable:false,editable:false,sortable:false,formatter:'currency',formatoptions:{thousandsSeparator: " ",decimalPlaces:0,suffix:" руб."}},
                    {name:'day',index:'day',width:170,align:'center',resizable:false,editable:false,sortable:false,formatter: customDay},
                    {name:'is_client_date',index:'is_client_date',width:150,align:'center',resizable:false,editable:false,sortable:false,formatter: customDate},
                    {name:'date_bid',index:'date_bid',width:150,align:'center',resizable:false,editable:false,sortable:false},
                    {name:'comment',index:'comment',width:220,align:'center',resizable:false,editable:false,sortable:false,formatter: customComment},
                    {name:'action',width:100,align:'center',sortable:false,resize:false,formatter:function() {
                        return "<div class='refresh-bid' style='margin-left:8px;'>" +
                                "<div style='float:left;margin-left:5px;' data-title='Установить заново' title='Установить заново' onmouseover=\"$(this).tooltip('show')\" data-toggle='tooltip' data-placement='left'>" +
                                "<span class='icon-arrows-cw'></span></div></div>" +
                                "<div class='cancel-bid' style='margin-left:8px;'>" +
                                "<div style='float:left;margin-left:5px;' data-title='Отменить ставку' title='Отменить ставку' onmouseover=\"$(this).tooltip('show')\" data-toggle='tooltip' data-placement='left'>" +
                                "<span class='icon-cancel-6'></span></div></div>";
                    }}
                ],
                rowNum: 100,
                viewrecords: true,
                rownumbers: true,
                rownumWidth: 40,
                hidegrid: false,
                caption: 'Таблица поставленных ставок',
                height: 'auto',
                altRows: true,
                recordtext: "Просмотр ставок {0} - {1}",
                pager: $('#pagerBids'),
                altclass:'alt-row',
                loadComplete : function() {
                    grid.find("tr").find("td").removeAttr('title');
                    {% if (obj.confirmSelection) %}
                    //modalConfirmClientBid.modal('show');
                    /*$("#dialog-message-confirm-selection").dialog({
                        modal: true,
                        resizable: false,
                        height: 230,
                        width: 410,
                        dialogClass: 'class-dialog-confirm-selection',
                        buttons: {
                            "Согласен": function() {
                                var rowId = getFirstRowId();
                                $.ajax({
                                    type: 'POST',
                                    data: 'bidId=' + rowId + '&action=confirmSelection',
                                    success: function(response) {
                                        var responseObject = window.JSON.parse(response);
                                        if (responseObject.action) {
                                            $("#dialog-message-confirm-selection").dialog("close");
                                            window.location.reload();
                                        }
                                    }
                                });
                            },
                            "Отказ": function() {
                                var rowId = getFirstRowId();
                                $.ajax({
                                    type: 'POST',
                                    data: 'bidId=' + rowId + '&action=failSelection',
                                    success: function(response) {
                                        var responseObject = window.JSON.parse(response);
                                        if (responseObject.action) {
                                            $("#dialog-message-confirm-selection").dialog("close");
                                        }
                                    }
                                });
                            }
                        },
                        close: function() {
                        }
                    });*/
                    {% endif %}
                    var zeroTr = $("#listBids tr.ui-widget-content").eq(0);
                    zeroTr.addClass('ui-state-active').find('.refresh-bid').addClass('hidden');
                    zeroTr.find('.grid-cell-day').removeClass('grid-cell-day');
                    $(".refresh-bid").click(function(e) {
                        var rowId = getRowId(e);
                        if (rowId) {
                            $.ajax({
                                type: 'POST',
                                data: 'bidId=' + rowId + '&action=refreshBid',
                                success: function(response) {
                                    var responseObject = window.JSON.parse(response);
                                    if (responseObject.action) {
                                        grid.trigger('reloadGrid');
                                    }
                                },
                                error: function() {
                                }
                            });
                        }
                    });
                    $(".cancel-bid").click(function(e) {
                        var rowId = getRowId(e);
                        if (rowId) {
                            $.ajax({
                                type: 'POST',
                                data: 'bidId=' + rowId + '&action=deleteBid',
                                success: function(response) {
                                    var responseObject = window.JSON.parse(response);
                                    if (responseObject.action) {
                                        grid.trigger('reloadGrid');
                                        clearFields();
                                    }
                                }
                            });
                        }
                    });
                }
            }).navGrid('#pagerBids',{view:false,search:false,del:false,add:false,edit:false,refresh:true},{},{},{},{},{});
            var buttonBid = $("#formBid_bid"), bidInDate = $("#formBid_isClientDate"), bidDay = $("#formBid_fieldDay"), bidSum = $("#formBid_fieldSum"), bidComment = $("#formBid_fieldComment");
            buttonBid.click(function(e) {
                var error = false;
                if (!isCorrectPrice(bidSum.val())) {
                    error = true;
                    bidSum.addClass('invalid').tooltip('show');
                } else {
                    bidSum.removeClass('invalid').tooltip('hide');
                }
                if (!isNormalInteger(bidDay.val()) && !bidInDate.prop('checked')) {
                    error = true;
                    bidDay.addClass('invalid').tooltip('show');
                } else {
                    bidDay.removeClass('invalid').tooltip('hide');
                }
                if (!error) {
                    var formBid = $("#formBid");
                    $.ajax({
                        type: 'POST',
                        data: formBid.serialize(),
                        success: function(response) {
                            var responseObject = window.JSON.parse(response);
                            if (responseObject.response == 'valid') {
                                $(".error").remove();
                                formBid.parent().prev().removeClass("success").hide();
                                disabledButtonBid(true);
                                clearFields();
                                grid.trigger('reloadGrid');
                                notice_window.openMessage($("#success-window"), 3000);
                            } else {
                                $(".error").remove();
                                $.each(responseObject.response, function(index, value) {
                                    var selector  = "#formBid_" + index;
                                    $(selector).parent().after("<p class='error'>" + value + "</p>");
                                });
                            }
                        },
                        error: function() {
                            notice_window.openMessage($("#error-window"), 3000);
                        }
                    });
                }
            });
            bidInDate.change(function() {
                if ($(this).prop("checked")) {
                    bidDay.removeClass('invalid').prop('disabled', true).tooltip('hide').val("");
                    if (bidSum.val().length > 2) {
                        disabledButtonBid(false);
                    }
                } else {
                    bidDay.prop('disabled', false).val("");
                    disabledButtonBid(true);
                }
            });
            if (bidSum.val() == "" || (bidDay.val() == "" && !bidInDate.prop("checked"))) {
                disabledButtonBid(true);
            } else {
                disabledButtonBid(false);
            }
            bidSum.on('input', function() {
                if ($(this).val() == "" || (bidDay.val() == "" && !bidInDate.prop("checked")) || $(this).val().length < 3) {
                    disabledButtonBid(true);
                } else {
                    disabledButtonBid(false);
                }
            });
            bidDay.on('input', function() {
                if ($(this).val() == "" || bidSum.val() == "" || bidSum.val().length < 3) {
                    disabledButtonBid(true);
                } else {
                    disabledButtonBid(false);
                }
            });
            function disabledButtonBid(a) {
                if (a) {
                    $(".btn-success").addClass('disabled');
                } else {
                    $(".btn-success").removeClass('disabled');
                }
                buttonBid.prop('disabled', a);
            }
            function clearFields() {
                bidDay.val("").prop('disabled', false);
                bidSum.val("");
                bidComment.val("");
                bidInDate.prop('checked', false);
                buttonBid.prop('disabled', false);
            }
            $('#formBid_fieldSum').priceFormat({
                prefix: '',
                centsSeparator: '',
                thousandsSeparator: ' ',
                centsLimit: 0,
                clearOnEmpty: true
            });
            /*var fullTask = '{{ order.task | raw }}', task = [{
                word: "подробнее...",
                definition: fullTask
            }];
            $('.define').definitions({
                term: task
            });
            $(".definition").click(function() {
                $(".definition_tooltip").toggleClass('hidden');
            });*/
        });
        </script>
        </div>
    {% endblock %}